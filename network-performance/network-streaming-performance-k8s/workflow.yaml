version: v0.2.0
input:
  root: RootObject
  objects:
    RootObject:
      id: RootObject
      properties:
        kubeconfig:
          display:
            description: The complete kubeconfig file as a string
            name: Kubeconfig file contents
          type:
            type_id: string
          required: true
        uperf_protocol:
          display:
            description: The protol to use for the uperf workload
            name: uperf protocol
          type:
            type_id: enum_string
            values:
              tcp:
                name: TCP
              udp:
                name: UDP
              ssl:
                name: SSL
              sctp:
                name: SCTP
              vsock:
                name: VSOCK
          default: '"tcp"'
          required: true
        uperf_nthreads:
          display:
            description: The number of threads for the uperf workload
            name: uperf nthreads
          type:
            type_id: integer
          default: 1
          required: true
        uperf_bytes:
          display:
            description: The uperf workload packet size in bytes
            name: uperf size
          type:
            type_id: integer
          default: 64
          required: true
        uperf_runtime_seconds:
          display:
            description: The time to run the uperf workload
            name: uperf runtime
          type:
            type_id: string
          default: "10s"
          required: true
        run_id:
          display:
            description: A unique run identifier for tracking groups of workflows triggered by external automation/CI
            name: Run ID
          type:
            type_id: string
          default: "\"\""
          required: false
        pmlogger_interval:
          display:
            description: The logger collection interval for PCP pmlogger
            name: PCP pmlogger collection interval
          type:
            type_id: integer
steps:
  uuidgen:
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-utilities:0.2.0
      deployment_type: image
    step: uuid
    input: {}
  kubeconfig:
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-kubeconfig:0.2.0
      deployment_type: image
    input:
      kubeconfig: !expr $.input.kubeconfig
  pcp:
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-pcp:0.4.0
      deployment_type: image
    step: start-pcp
    stop_if: !expr $.steps.uperf_client.outputs
    input:
      pmlogger_interval: !expr $.input.pmlogger_interval
    deploy:
      deployer_name: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: default
          labels:
            arcaflow: pcp
        spec:
          pluginContainer:
            imagePullPolicy: Always
              #          affinity:
              #            podAffinity:
              #              requiredDuringSchedulingIgnoredDuringExecution:
              #              - labelSelector:
              #                  matchExpressions:
              #                  - key: arcaflow
              #                    operator: In
              #                    values:
              #                    - uperf-client
              #                topologyKey: node-role.kubernetes.io/worker
  uperf_server:
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-uperf:0.5.0
      deployment_type: image
    step: uperf_server
    stop_if: !expr $.steps.uperf_client.outputs
    deploy:
      deployer_name: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: default
          labels:
            arcaflow: uperf-server
        spec:
          pluginContainer:
            imagePullPolicy: Always
    input: {}
  service:
    # Note: If this step isn't working, make sure that the network mode is set to host here or in the config.yaml
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-service:0.1.0
      deployment_type: image
    input:
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      service:
        metadata:
          namespace: default
        spec:
          ports:
           - name: control
             port: 20000
             protocol: TCP
           - name: controludp
             port: 20000
             protocol: UDP
          selector:
            arcaflow: uperf-server
  uperf_client:
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-uperf:0.5.0
      deployment_type: image
    step: uperf
    deploy:
      deployer_name: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: default
          labels:
            arcaflow: uperf-client
        spec:
          pluginContainer:
            imagePullPolicy: Always
    input:
      name: "netperf"
      groups:
        - nthreads: !expr $.input.uperf_nthreads
          transactions:
            - iterations: 1
              flowops:
                - type: "accept"
                  remotehost: !expr $.steps.service.outputs.success.name
                  port: 20000
                  protocol: !expr $.input.uperf_protocol
            - duration: !expr $.input.uperf_runtime_seconds
              flowops:
                - type: "write"
                  size: !expr $.input.uperf_bytes
                - type: "read"
                  size: !expr $.input.uperf_bytes
            - iterations: 1
              flowops:
                - type: "disconnect"
  metadata:
    plugin:
      src: quay.io/arcalot/arcaflow-plugin-metadata:0.1.0
      deployment_type: image
    deploy:
      deployer_name: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: default
          labels:
            arcaflow: metadata
        spec:
          pluginContainer:
            imagePullPolicy: Always
    input: {}
output:
  uuid: !expr $.steps.uuidgen.outputs.success.uuid
  run_id: !expr $.input.run_id
  uperf: !expr $.steps.uperf_client.outputs.success
  metadata: !expr $.steps.metadata.outputs.success
  pcp: !expr $.steps.pcp.outputs.success
