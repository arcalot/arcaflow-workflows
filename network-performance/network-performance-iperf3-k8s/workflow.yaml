input:
  root: RootObject
  objects:
    RootObject:
      id: RootObject
      properties:
        run_id:
          display:
            description: Optional string identifier for this workflow run
            name: Run ID
          type:
            type_id: string
          required: false
        kubeconfig:
          display:
            description: The complete kubeconfig file as a string
            name: Kubeconfig file contents
          type:
            type_id: string
          required: true
        k8s_namespace:
          display:
            description: The kubernetes namespace to host the containers
            name: Kubernetes namespace
          type:
            type_id: string
          default: '"default"'
          required: false
        port:
          display:
            description: server port to listen on/connect to
            name: iperf3 port
          type:
            type_id: integer
          required: false
        parallel:
          display:
            description: number of parallel client streams to run
            name: iperf3 parallelism
          type:
            type_id: integer
          required: false
        time:
          display:
            description: time in seconds to transmit for (default 30 secs)
            name: iperf3 test time
          type:
            type_id: integer
          default: 60
          required: false
        udp:
          display:
            description: use the UDP protocol for network traffic
            name: iperf3 use UDP
          type:
            type_id: bool
          required: false
        length:
          display:
            description: length of buffer to read or write (default 128 KB for TCP, dynamic or 1460 for UDP)
            name: iperf3 buffer length
          type:
            type_id: integer
          required: false
        bitrate:
          display:
            description: target bitrate in bits/sec (0 for unlimited) (default 1 Mbit/sec for UDP, unlimited for TCP)
            name: iperf3 buffer length
          type:
            type_id: integer
          required: false
        pcp_pmlogger_interval:
          display:
            description: The logger collection interval for PCP pmlogger
            name: PCP pmlogger collection interval
          type:
            type_id: integer
          required: false

steps:
  uuidgen:
    plugin: quay.io/arcalot/arcaflow-plugin-utilities:0.2.0
    step: uuid
    input: {}
  kubeconfig:
    plugin: quay.io/arcalot/arcaflow-plugin-kubeconfig:0.2.0
    input:
      kubeconfig: !expr $.input.kubeconfig
  metadata:
    plugin: quay.io/arcalot/arcaflow-plugin-metadata:0.1.0
    input: {}
    deploy:
      type: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: !expr $.input.k8s_namespace
          labels:
            arcaflow: metadata
        spec:
          pluginContainer:
            imagePullPolicy: Always 
  #TODO Implement signaling once available in the engine
  pcp:
    plugin: quay.io/arcalot/arcaflow-plugin-pcp:0.2.0
    step: start-pcp
    input:
      pmlogger_interval: !expr $.input.pcp_pmlogger_interval
      run_duration: !expr $.input.time
    deploy:
      type: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: !expr $.input.k8s_namespace
          labels:
            arcaflow: pcp
        spec:
          pluginContainer:
            imagePullPolicy: Always
  iperf3_server:
    plugin: quay.io/arcalot/arcaflow-plugin-iperf3:0.1.0
    step: server
    input:
      port: !expr $.input.port
      run_duration: 30
    deploy:
      type: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: !expr $.input.k8s_namespace
          labels:
            arcaflow: iperf3-server
        spec:
          pluginContainer:
            imagePullPolicy: Always
  service:
    plugin: quay.io/arcalot/arcaflow-plugin-service:0.1.0
    # Need to use host networking for kind cluster
    deploy:
      type: podman
      podman:
        networkMode: host
    input:
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      service:
        metadata:
          namespace: !expr $.input.k8s_namespace
        spec:
          ports:
           - name: workload
             port: !expr $.input.port
             protocol: TCP
           - name: workloadudp
             port: !expr $.input.port
             protocol: UDP
          selector:
            arcaflow: iperf3-server
  iperf3_client:
    plugin: quay.io/arcalot/arcaflow-plugin-iperf3:0.1.0
    step: client
    input:
      host: !expr $.steps.service.outputs.success.name
      port: !expr $.input.port
        #parallel: !expr $.input.parallel
      time: !expr $.input.time
        #udp: !expr $.input.udp
        #length: !expr $.input.length
        #bitrate: !expr $.input.bitrate
        #title: !expr $.input.run_id
    deploy:
      type: kubernetes
      connection: !expr $.steps.kubeconfig.outputs.success.connection
      pod:
        metadata:
          namespace: !expr $.input.k8s_namespace
          labels:
            arcaflow: iperf3-client
        spec:
          pluginContainer:
            imagePullPolicy: Always

output:
  uuid: !expr $.steps.uuidgen.outputs.success.uuid
  run_id: !expr $.input.run_id
  iperf3: !expr $.steps.iperf3_client.outputs.success
  metadata: !expr $.steps.metadata.outputs.success
  pcp: !expr $.steps.pcp.outputs.success
